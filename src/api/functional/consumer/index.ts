/**
 * @packageDocumentation
 * @module api.functional.consumer
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, IPropagation } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { User } from "../../structures/User";

/**
 * @controller ConsumerController.execute
 * @path POST /consumer
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function execute(
  connection: IConnection,
  body: execute.Input,
): Promise<execute.Output> {
  return PlainFetcher.propagate<any, any>(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...execute.METADATA,
      template: execute.METADATA.path,
      path: execute.path(),
    },
    body,
  );
}
export namespace execute {
  export type Input = User.o1;
  export type Output = IPropagation<
    {
      201: User.o1;
    },
    201
  >;

  export const METADATA = {
    method: "POST",
    path: "/consumer",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/consumer";
}
