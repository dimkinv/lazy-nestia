/**
 * @packageDocumentation
 * @module api.functional.users
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, IPropagation } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { User } from "../../structures/User";
import type { UserAdvCodeValidation } from "../../structures/UserAdvCodeValidation";

/**
 * @controller AppController.addUser
 * @path POST /users
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function addUser(
  connection: IConnection,
  user: addUser.Input,
): Promise<addUser.Output> {
  return PlainFetcher.propagate<any, any>(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...addUser.METADATA,
      template: addUser.METADATA.path,
      path: addUser.path(),
    },
    user,
  );
}
export namespace addUser {
  export type Input = UserAdvCodeValidation;
  export type Output = IPropagation<
    {
      201: User;
    },
    201
  >;

  export const METADATA = {
    method: "POST",
    path: "/users",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/users";
}
